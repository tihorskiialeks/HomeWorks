package ua.kh.tykhorskyi.hw.linkedList;

/*
 * Done 1) –æ—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫;
Done 2) –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–æ–∫;
Done 3) –ü–æ–ª—É—á–∏—Ç—å j-–π —ç–ª–µ–º–µ–Ω—Ç;
Done 4) –£–¥–∞–ª–∏—Ç—å j-–π —ç–ª–µ–º–µ–Ω—Ç;
Done 5) –≤—ã–≤–µ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –Ω–∞ —ç–∫—Ä–∞–Ω.

–û–±—ä—è–≤–∏—Ç–µ –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª–∏–∑—É–µ—Ç –æ–¥–Ω–æ—Å–≤—è–∑–Ω—ã–π —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ (—á–∏—Å–µ–ª, –æ–±—å–µ–∫—Ç–æ–≤, —á–µ–≥–æ —É–≥–æ–¥–Ω–æ –ø–æ–∫–∞ üôÇ ). 
–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –¥–≤—É–º—è –ø–æ–ª—è–º–∏: —Å—Ç—Ä–æ–∫–æ–π –∏ —É–∫–∞–∑–∞—Ç–µ–ª–µ–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞.
 –í —á–∞—Å—Ç–Ω–æ–º —Å–ª—É—á–∞–µ –æ–¥–Ω–æ—ç–ª–µ–º–µ–Ω—Ç–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —ç—Ç–æ—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å —Ä–∞–≤–µ–Ω null. –ú–µ—Ç–æ–¥—ã —Ç–∞–∫–∏–µ –∂–µ –∫–∞–∫ –∏ —É –∫–ª–∞—Å—Å–∞ "–í–µ–∫—Ç–æ—Ä".
 */
public class List {
	private LinkedList head;
	private LinkedList tail;

	public List(int data) {
		this.head = new LinkedList(data, null);
		this.tail = head;
	}

	public void add(int data) {
		LinkedList temp = new LinkedList(data, null);
		tail.setNext(temp);
		tail = tail.getNext();
	}

	/**
	 * the method which add element to the chosen place;
	 * 
	 * @param data  - element
	 * @param index - place to add
	 */
	// –≠—Ç–æ–≥–æ –≤ –¥–æ–º–∞—à–∫–µ –Ω–µ –±—ã–ª–æ, –Ω–∞—á–∞–ª –∫–æ–ø–∞—Ç—å—Å—è, –∑–∞–ª–µ–∑ –≤ –ª–µ—Å, —Ä–µ—à–∏–ª –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏ —Ç–æ–∂–µ
	// —Å–¥–µ–ª–∞—Ç—å)
	public void add(int data, int index) {
		LinkedList list = head;
		for (int i = 1; i < index - 1; i++) {
			list = list.getNext();
		}
		list.setNext(new LinkedList(data, list.getNext()));
	}

	public void delete(int index) {
		LinkedList list = head;
		for (int i = 1; i < index - 1; i++) {
			list = list.getNext();
		}
		list.setNext(list.getNext().getNext());
	}

	public void print() {
		LinkedList list = head;
		while (list != null) {
			System.out.printf("%d ", list.getNumber());
			list = list.getNext();
		}
	}

	public void print(int index) {
		LinkedList list = head;
		for (int i = 1; i < index; i++) {
			list = list.getNext();
		}
		System.out.println(list.getNumber());
	}

	public void clean() {
		head = new LinkedList(0, null);
	}
}
